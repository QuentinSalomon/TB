<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ocf</name>
    </assembly>
    <members>
        <member name="T:Ocf.DynamicOcfResult">
            <summary>
            Class DynamicOcfResult
            </summary>
        </member>
        <member name="M:Ocf.DynamicOcfResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.DynamicOcfResult"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Char">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Char"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Int64">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Int64"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Int16">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Int16"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.SByte">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.SByte"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.UInt64">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.UInt64"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.UInt32">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.UInt32"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.UInt16">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.UInt16"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Byte">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Byte"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Decimal">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Decimal"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Double">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Double"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Single">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Single"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.op_Implicit(Ocf.DynamicOcfResult)~System.Boolean">
            <summary>
            Performs an implicit conversion from <see cref="T:Ocf.DynamicOcfResult"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="o">The o.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Ocf.DynamicOcfResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Ocf.DynamicOcfResult.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Ocf.DynamicOcfResult.DoubleValue">
            <summary>
            Gets the double value.
            </summary>
            <value>The double value.</value>
        </member>
        <member name="P:Ocf.DynamicOcfResult.LongValue">
            <summary>
            Gets the long value.
            </summary>
            <value>The long value.</value>
        </member>
        <member name="P:Ocf.DynamicOcfResult.ULongValue">
            <summary>
            Gets the U long value.
            </summary>
            <value>The U long value.</value>
        </member>
        <member name="P:Ocf.DynamicOcfResult.BoolValue">
            <summary>
            Gets a value indicating whether [bool value].
            </summary>
            <value><c>true</c> if [bool value]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Ocf.InvocationNameAttribute">
            <summary>
            Class InvocationNameAttribute
            </summary>
        </member>
        <member name="M:Ocf.InvocationNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.InvocationNameAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Ocf.InvocationNameAttribute.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="T:Ocf.InvocableAttribute">
            <summary>
            Class InvocableAttribute
            </summary>
        </member>
        <member name="T:Ocf.IStringConvertible">
            <summary>
            Interface IStringConvertible
            </summary>
        </member>
        <member name="M:Ocf.IStringConvertible.ConvertFrom(System.String)">
            <summary>
            Converts from.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Ocf.IStringConvertible.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:Ocf.InvocationAccess">
            <summary>
            Enum InvocationAccess
            </summary>
        </member>
        <member name="F:Ocf.InvocationAccess.Invocable">
            <summary>
            The invocable invocation access
            </summary>
        </member>
        <member name="F:Ocf.InvocationAccess.Public">
            <summary>
            The public invocation access
            </summary>
        </member>
        <member name="F:Ocf.InvocationAccess.Protected">
            <summary>
            The protected invocation access
            </summary>
        </member>
        <member name="F:Ocf.InvocationAccess.Private">
            <summary>
            The private invocation access
            </summary>
        </member>
        <member name="T:Ocf.InvocableReflector">
            <summary>
            Class InvocableReflector
            </summary>
        </member>
        <member name="T:Ocf.IInvocable">
            <summary>
            Interface IInvocable
            </summary>
        </member>
        <member name="M:Ocf.IInvocable.Invoke(Ocf.IOcfRequest,Ocf.IOcfResult)">
            <summary>
            Invokes the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Ocf.InvocableReflector.#ctor(System.Object,Ocf.InvocationAccess,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.InvocableReflector"/> class.
            </summary>
            <param name="targetObject">The target object.</param>
            <param name="invocationAccess">The invocation access.</param>
            <param name="showInheritedMembers">if set to <c>true</c> [show inherited members].</param>
            <param name="categorizedByType">if set to <c>true</c> [categorized by type].</param>
        </member>
        <member name="M:Ocf.InvocableReflector.#ctor(System.Object,Ocf.InvocationAccess,System.Boolean,System.Boolean,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.InvocableReflector"/> class.
            </summary>
            <remarks>
            Use to categorize the inherited members
            </remarks>
            <param name="targetObject">The target object.</param>
            <param name="invocationAccess">The invocation access.</param>
            <param name="showInheritedMembers">if set to <c>true</c> [show inherited members].</param>
            <param name="categorizedByType">if set to <c>true</c> [categorized by type].</param>
            <param name="categoryType">Type of the category.</param>
        </member>
        <member name="M:Ocf.InvocableReflector.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.FindMember(System.String)">
            <summary>
            Finds the member.
            </summary>
            <param name="name">The name.</param>
            <returns>MemberInfo.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.FindSpecialMember(System.String)">
            <summary>
            Finds the special member.
            </summary>
            <param name="name">The name.</param>
            <returns>MemberInfo.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.FindMember(System.String,System.Int32)">
            <summary>
            Finds the member.
            </summary>
            <param name="name">The name.</param>
            <param name="index">The index.</param>
            <returns>MemberInfo.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.SetValue(System.String,System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <exception cref="T:Ocf.OcfException"></exception>
        </member>
        <member name="F:Ocf.InvocableReflector.TargetObject">
            <summary>
            The target object
            </summary>
        </member>
        <member name="M:Ocf.InvocableReflector.Format(System.Reflection.ParameterInfo[])">
            <summary>
            Formats the specified infos.
            </summary>
            <param name="infos">The infos.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.ConvertTo(System.String,System.Type)">
            <summary>
            Converts to.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotSupportedException">
            </exception>
        </member>
        <member name="M:Ocf.InvocableReflector.ConvertFrom(System.Object,System.Type)">
            <summary>
            Converts from.
            </summary>
            <param name="value">The value.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException">
            </exception>
        </member>
        <member name="M:Ocf.InvocableReflector.IsValueType(System.Type)">
            <summary>
            Determines whether [is value type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if [is value type] [the specified type]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.IsFieldType(System.Type)">
            <summary>
            Determines whether [is field type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if [is field type] [the specified type]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.IsVisible(System.Reflection.MemberInfo)">
            <summary>
            Determines whether the specified info is visible.
            </summary>
            <param name="info">The info.</param>
            <returns><c>true</c> if the specified info is visible; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.IsUserDefine(System.Reflection.MemberInfo)">
            <summary>
            Determines whether [is user define] [the specified info].
            </summary>
            <param name="info">The info.</param>
            <returns><c>true</c> if [is user define] [the specified info]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.IsInvocable(System.Reflection.MemberInfo)">
            <summary>
            Determines whether the specified property is invocable.
            </summary>
            <param name="property">The property.</param>
            <returns><c>true</c> if the specified property is invocable; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ocf.InvocableReflector.InvokeMembers(Ocf.IOcfResult)">
            <summary>
            Invokes the members.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Ocf.InvocableReflector.InvokeEvaluate(Ocf.IOcfRequest,Ocf.IOcfResult)">
            <summary>
            Invokes the evaluate.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
            <exception cref="T:Ocf.OcfException">
            Member not found ' + request.MemberName + '
            or
            Member not found ' + request.MemberName + '
            </exception>
        </member>
        <member name="M:Ocf.InvocableReflector.InvokeSetValue(Ocf.IOcfRequest,Ocf.IOcfResult)">
            <summary>
            Invokes the set value.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="P:Ocf.InvocableReflector.Members">
            <summary>
            Gets the members.
            </summary>
            <value>The members.</value>
        </member>
        <member name="P:Ocf.InvocableReflector._Access">
            <summary>
            Gets the access.
            </summary>
            <value>The access.</value>
        </member>
        <member name="P:Ocf.InvocableReflector._ShowInheritedMembers">
            <summary>
            Gets a value indicating whether [show inherited members].
            </summary>
            <value><c>true</c> if [show inherited members]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ocf.InvocableReflector._CategorizedByType">
            <summary>
            Gets a value indicating whether [categorized by type].
            </summary>
            <value><c>true</c> if [categorized by type]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ocf.InvocableReflector._CategoryType">
            <summary>
            Gets the type of the category.
            </summary>
            <value>The type of the category.</value>
        </member>
        <member name="P:Ocf.InvocableReflector.HasBaseType">
            <summary>
            Gets a value indicating whether this instance has base type.
            </summary>
            <value><c>true</c> if this instance has base type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ocf.InvocableReflector.InheritedTypeNodeName">
            <summary>
            Gets the name of the inherited type node.
            </summary>
            <value>The name of the inherited type node.</value>
        </member>
        <member name="T:Ocf.InvocableReflectorEnumerable">
            <summary>
            Class InvocableReflectorEnumerable
            </summary>
        </member>
        <member name="M:Ocf.InvocableReflectorEnumerable.#ctor(System.Collections.IEnumerable,System.Reflection.PropertyInfo,Ocf.InvocationAccess,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.InvocableReflectorEnumerable"/> class.
            </summary>
            <param name="targetObject">The target object.</param>
            <param name="property">The property.</param>
            <param name="invocationAccess">The invocation access.</param>
            <param name="showInheritedMembers">if set to <c>true</c> [show inherited members].</param>
            <param name="categorizedByType">if set to <c>true</c> [categorized by type].</param>
        </member>
        <member name="M:Ocf.InvocableReflectorEnumerable.InvokeEvaluate(Ocf.IOcfRequest,Ocf.IOcfResult)">
            <summary>
            Invokes the evaluate.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="P:Ocf.InvocableReflectorEnumerable.Members">
            <summary>
            Gets the members.
            </summary>
            <value>The members.</value>
        </member>
        <member name="T:Ocf.OcfBase">
            <summary>
            Class OcfBase
            </summary>
        </member>
        <member name="M:Ocf.OcfBase.NotifyRequest(Ocf.IOcfMonitoringRequest)">
            <summary>
            Notifies the request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Ocf.OcfBase.NotifyResult(Ocf.IOcfMonitoringResult)">
            <summary>
            Notifies the result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Ocf.OcfBase.NotifyResultTimeout">
            <summary>
            Notifies the result timeout.
            </summary>
        </member>
        <member name="M:Ocf.OcfBase.DoPropertyChanged(System.String)">
            <summary>
            Does the property changed.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Ocf.OcfBase.Monitoring">
            <summary>
            Gets the monitoring.
            </summary>
            <value>The monitoring.</value>
        </member>
        <member name="P:Ocf.OcfBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="E:Ocf.OcfBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Ocf.OcfClient">
            <summary>
            Class OcfClient
            </summary>
        </member>
        <member name="T:Ocf.IOcfClient">
            <summary>
            Interface IOcfClient
            </summary>
        </member>
        <member name="M:Ocf.IOcfClient.GetMetaData">
            <summary>
            Gets the meta data.
            </summary>
            <returns>IEnumerable{MetaDataMember}.</returns>
        </member>
        <member name="M:Ocf.IOcfClient.GetChild(System.String,System.Boolean)">
            <summary>
            Gets the child.
            </summary>
            <param name="childName">Name of the child.</param>
            <param name="forceBind">if set to <c>true</c> [force bind].</param>
            <returns>IOcfClient.</returns>
        </member>
        <member name="M:Ocf.IOcfClient.Evaluate(System.String,System.Object[])">
            <summary>
            Evaluates the specified member name.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Ocf.IOcfClient.Execute(System.String,System.Object[])">
            <summary>
            Executes the specified member name.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Ocf.IOcfClient.SetValue(System.String,System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ocf.IOcfClient.EvaluateResults(System.String,System.Object[])">
            <summary>
            Evaluates the results.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{System.String}.</returns>
        </member>
        <member name="P:Ocf.IOcfClient.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ocf.IOcfClient.Container">
            <summary>
            Gets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="M:Ocf.OcfClient.#ctor(System.String,Ocf.OcfClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfClient"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ocf.OcfClient.PrepareMetadata">
            <summary>
            Prepares the metadata.
            </summary>
        </member>
        <member name="M:Ocf.OcfClient.GetMetaData">
            <summary>
            Gets the meta data.
            </summary>
            <returns>IEnumerable{MetaDataMember}.</returns>
        </member>
        <member name="M:Ocf.OcfClient.GetChild(System.String,System.Boolean)">
            <summary>
            Gets the child.
            </summary>
            <param name="childName">Name of the child.</param>
            <param name="forceBind">if set to <c>true</c> [force bind].</param>
            <returns>IOcfClient.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ocf.OcfClient.Evaluate(System.String,System.Object[])">
            <summary>
            Evaluates the specified member name.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ocf.OcfClient.Execute(System.String,System.Object[])">
            <summary>
            Executes the specified member name.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="parameters">The parameters.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ocf.OcfClient.SetValue(System.String,System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ocf.OcfClient.EvaluateResults(System.String,System.Object[])">
            <summary>
            Evaluates the results.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{System.String}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ocf.OcfClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Ocf.OcfClient.Roots">
            <summary>
            Gets the roots.
            </summary>
            <value>The roots.</value>
        </member>
        <member name="P:Ocf.OcfClient.Monitoring">
            <summary>
            Gets the monitoring.
            </summary>
            <value>The monitoring.</value>
        </member>
        <member name="P:Ocf.OcfClient.Metadata">
            <summary>
            Gets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Ocf.OcfClient.Container">
            <summary>
            Gets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="T:Ocf.OcfMetadata">
            <summary>
            Class OcfMetadata
            </summary>
        </member>
        <member name="M:Ocf.OcfMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMetadata"/> class.
            </summary>
        </member>
        <member name="M:Ocf.OcfMetadata.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Ocf.OcfMetadata.AppendMetadata(Ocf.OcfMetadata)">
            <summary>
            Appends the metadata.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:Ocf.OcfMetadata.AppendMetadata(System.Collections.Generic.IEnumerable{Ocf.MetaDataMember})">
            <summary>
            Appends the metadata.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:Ocf.OcfMetadata.AppendMetadata(Ocf.MemberType,System.String,System.Boolean)">
            <summary>
            Appends the metadata.
            </summary>
            <param name="memberType">Type of the member.</param>
            <param name="definition">The definition.</param>
            <param name="expandArrayDefinition">if set to <c>true</c> [expand array definition].</param>
        </member>
        <member name="P:Ocf.OcfMetadata.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="T:Ocf.OcfMonitorings">
            <summary>
            Class OcfMonitorings
            </summary>
        </member>
        <member name="P:Ocf.OcfMonitorings.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Ocf.OcfMonitorings.Invocable">
            <summary>
            Gets the invocable.
            </summary>
            <value>The invocable.</value>
        </member>
        <member name="P:Ocf.OcfMonitorings.Clients">
            <summary>
            Gets the clients.
            </summary>
            <value>The clients.</value>
        </member>
        <member name="P:Ocf.OcfMonitorings.Servers">
            <summary>
            Gets the servers.
            </summary>
            <value>The servers.</value>
        </member>
        <member name="T:Ocf.IOcfMonitoringRequest">
            <summary>
            Interface IOcfMonitoringRequest
            </summary>
        </member>
        <member name="P:Ocf.IOcfMonitoringRequest.ObjectId">
            <summary>
            Gets the object id.
            </summary>
            <value>The object id.</value>
        </member>
        <member name="P:Ocf.IOcfMonitoringRequest.InvocationType">
            <summary>
            Gets the type of the invocation.
            </summary>
            <value>The type of the invocation.</value>
        </member>
        <member name="P:Ocf.IOcfMonitoringRequest.MemberName">
            <summary>
            Gets the name of the member.
            </summary>
            <value>The name of the member.</value>
        </member>
        <member name="P:Ocf.IOcfMonitoringRequest.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Ocf.OcfMonitoringRequest">
            <summary>
            Class OcfMonitoringRequest
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoringRequest.#ctor(System.String,Ocf.InvocationType,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMonitoringRequest"/> class.
            </summary>
            <param name="objectId">The object id.</param>
            <param name="invocationType">Type of the invocation.</param>
            <param name="memberName">Name of the member.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Ocf.OcfMonitoringRequest.ObjectId">
            <summary>
            Gets the object id.
            </summary>
            <value>The object id.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringRequest.InvocationType">
            <summary>
            Gets the type of the invocation.
            </summary>
            <value>The type of the invocation.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringRequest.MemberName">
            <summary>
            Gets the name of the member.
            </summary>
            <value>The name of the member.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringRequest.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Ocf.IOcfMonitoringResult">
            <summary>
            Interface IOcfMonitoringResult
            </summary>
        </member>
        <member name="P:Ocf.IOcfMonitoringResult.ResultType">
            <summary>
            Gets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="P:Ocf.IOcfMonitoringResult.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Ocf.OcfMonitoringResult">
            <summary>
            Class OcfMonitoringResult
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoringResult.#ctor(Ocf.InvocationResultType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMonitoringResult"/> class.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ocf.OcfMonitoringResult.#ctor(Ocf.InvocationResultType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMonitoringResult"/> class.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Ocf.OcfMonitoringResult.ResultType">
            <summary>
            Gets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringResult.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Ocf.OcfMonitoringStatistics">
            <summary>
            Class OcfMonitoringStatistics
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoringStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMonitoringStatistics"/> class.
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoringStatistics.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoringStatistics.NotifyRequest(Ocf.IOcfMonitoringRequest)">
            <summary>
            Notifies the request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Ocf.OcfMonitoringStatistics.NotifyResult(Ocf.IOcfMonitoringResult)">
            <summary>
            Notifies the result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Ocf.OcfMonitoringStatistics.NotifyResultTimeout">
            <summary>
            Notifies the result timeout.
            </summary>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.RequestDurationMs">
            <summary>
            Gets or sets the request duration ms.
            </summary>
            <value>The request duration ms.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.RequestAverageDurationMs">
            <summary>
            Gets or sets the request average duration ms.
            </summary>
            <value>The request average duration ms.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.RequestCount">
            <summary>
            Gets or sets the request count.
            </summary>
            <value>The request count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.ResultVoidCount">
            <summary>
            Gets or sets the result void count.
            </summary>
            <value>The result void count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.ResultMetadataCount">
            <summary>
            Gets or sets the result metadata count.
            </summary>
            <value>The result metadata count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.ResultValueCount">
            <summary>
            Gets or sets the result value count.
            </summary>
            <value>The result value count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.ResultObjectReferenceCount">
            <summary>
            Gets or sets the result object reference count.
            </summary>
            <value>The result object reference count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.ResultTimeoutCount">
            <summary>
            Gets or sets the result timeout count.
            </summary>
            <value>The result timeout count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.ResultExceptionCount">
            <summary>
            Gets or sets the result exception count.
            </summary>
            <value>The result exception count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.ResultInvalidSessionCount">
            <summary>
            Gets or sets the result invalid session count.
            </summary>
            <value>The result invalid session count.</value>
        </member>
        <member name="P:Ocf.OcfMonitoringStatistics.TotalValidResultCount">
            <summary>
            Gets the total valid result count.
            </summary>
            <value>The total valid result count.</value>
        </member>
        <member name="T:Ocf.OcfMonitorRequestEventArgs">
            <summary>
            Class OcfMonitorRequestEventArgs
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitorRequestEventArgs.#ctor(Ocf.IOcfMonitoringRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMonitorRequestEventArgs"/> class.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="P:Ocf.OcfMonitorRequestEventArgs.Request">
            <summary>
            Gets or sets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="T:Ocf.OcfMonitorResultEventArgs">
            <summary>
            Class OcfMonitorResultEventArgs
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitorResultEventArgs.#ctor(Ocf.IOcfMonitoringResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMonitorResultEventArgs"/> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Ocf.OcfMonitorResultEventArgs.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:Ocf.OcfMonitoring">
            <summary>
            Class OcfMonitoring
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoring.#ctor(Ocf.OcfBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfMonitoring"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Ocf.OcfMonitoring.NotifyRequest(Ocf.IOcfMonitoringRequest)">
            <summary>
            Notifies the request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Ocf.OcfMonitoring.NotifyResult(Ocf.IOcfMonitoringResult)">
            <summary>
            Notifies the result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Ocf.OcfMonitoring.NotifyResultTimeout">
            <summary>
            Notifies the result timeout.
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoring.DoBeforeRequest(Ocf.IOcfMonitoringRequest)">
            <summary>
            Does the before request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Ocf.OcfMonitoring.DoAfterResult(Ocf.IOcfMonitoringResult)">
            <summary>
            Does the after result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Ocf.OcfMonitoring.DoAfterResultTimeout">
            <summary>
            Does the after result timeout.
            </summary>
        </member>
        <member name="M:Ocf.OcfMonitoring.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:Ocf.OcfMonitoring.BeforeRequest">
            <summary>
            Occurs when [before request].
            </summary>
        </member>
        <member name="E:Ocf.OcfMonitoring.AfterResult">
            <summary>
            Occurs when [after result].
            </summary>
        </member>
        <member name="E:Ocf.OcfMonitoring.AfterResultTimeout">
            <summary>
            Occurs when [after result timeout].
            </summary>
        </member>
        <member name="P:Ocf.OcfMonitoring.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Ocf.OcfMonitoring.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ocf.OcfMonitoring.MonitoringEnabled">
            <summary>
            Gets or sets a value indicating whether [monitoring enabled].
            </summary>
            <value><c>true</c> if [monitoring enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ocf.OcfMonitoring.LogEnabled">
            <summary>
            Gets or sets a value indicating whether [log enabled].
            </summary>
            <value><c>true</c> if [log enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ocf.OcfMonitoring.LogMessageParameterEnabled">
            <summary>
            Gets or sets a value indicating whether [log message parameter enabled].
            </summary>
            <value><c>true</c> if [log message parameter enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ocf.OcfMonitoring.Statistics">
            <summary>
            Gets the statistics.
            </summary>
            <value>The statistics.</value>
        </member>
        <member name="P:Ocf.OcfMonitoring.Log">
            <summary>
            Gets the log.
            </summary>
            <value>The log.</value>
        </member>
        <member name="T:Ocf.MemberType">
            <summary>
            Enum MemberType
            </summary>
        </member>
        <member name="F:Ocf.MemberType.mtField">
            <summary>
            The field member type
            </summary>
        </member>
        <member name="F:Ocf.MemberType.mtReadOnlyField">
            <summary>
            The read only field member type
            </summary>
        </member>
        <member name="F:Ocf.MemberType.mtChild">
            <summary>
            The child member type
            </summary>
        </member>
        <member name="F:Ocf.MemberType.mtMethod">
            <summary>
            The method member type
            </summary>
        </member>
        <member name="T:Ocf.InvocationType">
            <summary>
            Enum InvocationType
            </summary>
        </member>
        <member name="F:Ocf.InvocationType.itMembers">
            <summary>
            members invocationType
            </summary>
        </member>
        <member name="F:Ocf.InvocationType.itEvaluate">
            <summary>
            evaluate invocationType
            </summary>
        </member>
        <member name="F:Ocf.InvocationType.itSetValue">
            <summary>
            setvalue invocationType
            </summary>
        </member>
        <member name="T:Ocf.InvocationResultType">
            <summary>
            Enum InvocationResultType
            </summary>
        </member>
        <member name="F:Ocf.InvocationResultType.irtNone">
            <summary>
            none
            </summary>
        </member>
        <member name="F:Ocf.InvocationResultType.irtError">
            <summary>
            error
            </summary>
        </member>
        <member name="F:Ocf.InvocationResultType.irtInvalidSessionError">
            <summary>
            invalid session error
            </summary>
        </member>
        <member name="F:Ocf.InvocationResultType.irtMetaData">
            <summary>
            meta data
            </summary>
        </member>
        <member name="F:Ocf.InvocationResultType.irtObjectReference">
            <summary>
            object reference
            </summary>
        </member>
        <member name="F:Ocf.InvocationResultType.irtValue">
            <summary>
            value
            </summary>
        </member>
        <member name="T:Ocf.MetaDataMember">
            <summary>
            Class MetaDataMember
            </summary>
        </member>
        <member name="F:Ocf.MetaDataMember.ItemsLeftDelimiter">
            <summary>
            The items left delimiter
            </summary>
        </member>
        <member name="F:Ocf.MetaDataMember.ItemsRightDelimiter">
            <summary>
            The items right delimiter
            </summary>
        </member>
        <member name="F:Ocf.MetaDataMember.MetadataSeparator">
            <summary>
            The metadata separator
            </summary>
        </member>
        <member name="M:Ocf.MetaDataMember.Format(Ocf.MemberType,System.String)">
            <summary>
            Formats the specified member type.
            </summary>
            <param name="memberType">Type of the member.</param>
            <param name="memberDefinition">The member definition.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Ocf.MetaDataMember.Parse(System.String,Ocf.MemberType@,System.String@)">
            <summary>
            Parses the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="memberType">Type of the member.</param>
            <param name="memberDefinition">The member definition.</param>
            <exception cref="T:Ocf.OcfException">Invalid metadata string format</exception>
        </member>
        <member name="M:Ocf.MetaDataMember.#ctor(Ocf.MemberType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.MetaDataMember"/> class.
            </summary>
            <param name="memberType">Type of the member.</param>
            <param name="memberDefinition">The member definition.</param>
        </member>
        <member name="M:Ocf.MetaDataMember.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Ocf.MetaDataMember.MemberType">
            <summary>
            Gets the type of the member.
            </summary>
            <value>The type of the member.</value>
        </member>
        <member name="P:Ocf.MetaDataMember.MemberDefinition">
            <summary>
            Gets the member definition.
            </summary>
            <value>The member definition.</value>
        </member>
        <member name="T:Ocf.IOcfRequest">
            <summary>
            Interface IOcfRequest
            </summary>
        </member>
        <member name="M:Ocf.IOcfRequest.GetParameter(System.Int32)">
            <summary>
            Gets the parameter.
            </summary>
            <param name="index">The index.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Ocf.IOcfRequest.GetParameterCount">
            <summary>
            Gets the parameter count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="P:Ocf.IOcfRequest.InvocationType">
            <summary>
            Gets the type of the invocation.
            </summary>
            <value>The type of the invocation.</value>
        </member>
        <member name="P:Ocf.IOcfRequest.ReferencedObject">
            <summary>
            Gets the referenced object.
            </summary>
            <value>The referenced object.</value>
        </member>
        <member name="P:Ocf.IOcfRequest.MemberName">
            <summary>
            Gets the name of the member.
            </summary>
            <value>The name of the member.</value>
        </member>
        <member name="T:Ocf.IOcfResult">
            <summary>
            Interface IOcfResult
            </summary>
        </member>
        <member name="M:Ocf.IOcfResult.AppendMetaDataMember(Ocf.MemberType,System.String)">
            <summary>
            Appends the meta data member.
            </summary>
            <param name="memberType">Type of the member.</param>
            <param name="definition">The definition.</param>
        </member>
        <member name="P:Ocf.IOcfResult.ResultType">
            <summary>
            Sets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="P:Ocf.IOcfResult.ReferencedObject">
            <summary>
            Sets the referenced object.
            </summary>
            <value>The referenced object.</value>
        </member>
        <member name="P:Ocf.IOcfResult.Value">
            <summary>
            Sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Ocf.IOcfServer">
            <summary>
            Interface IOcfServer
            </summary>
        </member>
        <member name="M:Ocf.IOcfServer.WaitInvocation(System.TimeSpan)">
            <summary>
            Waits the invocation.
            </summary>
            <param name="timeout">The timeout.</param>
            <returns><c>true</c> if success in time, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Ocf.IOcfServer.ExecuteInvocation(Ocf.IInvocable)">
            <summary>
            Executes the invocation.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Ocf.OcfServer">
            <summary>
            Class OcfServer
            </summary>
        </member>
        <member name="F:Ocf.OcfServer.RootElement">
            <summary>
            The root element
            </summary>
        </member>
        <member name="M:Ocf.OcfServer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ocf.OcfServer"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Ocf.OcfServer.GetReferencedObject(System.Int32)">
            <summary>
            Gets the referenced object.
            </summary>
            <param name="id">The id.</param>
            <returns>IInvocable.</returns>
        </member>
        <member name="M:Ocf.OcfServer.RegisterReferencedObject(Ocf.IInvocable)">
            <summary>
            Registers the referenced object.
            </summary>
            <param name="referencedObject">The referenced object.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Ocf.OcfServer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Ocf.OcfServer.Monitoring">
            <summary>
            Gets the monitoring.
            </summary>
            <value>The monitoring.</value>
        </member>
        <member name="P:Ocf.OcfServer.Servers">
            <summary>
            Gets the servers.
            </summary>
            <value>The servers.</value>
        </member>
        <member name="T:Ocf.OcfUtils">
            <summary>
            Class OcfUtils
            </summary>
        </member>
        <member name="F:Ocf.OcfUtils.PathSeparator">
            <summary>
            The path separator
            </summary>
        </member>
        <member name="F:Ocf.OcfUtils.PseudoPropertyXml">
            <summary>
            The pseudo property XML
            </summary>
        </member>
        <member name="M:Ocf.OcfUtils.GetChildByPath(Ocf.IOcfClient,System.String,System.Boolean)">
            <summary>
            Gets the child by path.
            </summary>
            <param name="client">The client.</param>
            <param name="childPath">The child path.</param>
            <param name="forceBind">if set to <c>true</c> [force bind].</param>
            <returns>IOcfClient.</returns>
        </member>
        <member name="M:Ocf.OcfUtils.GetChildByPath(System.Collections.Generic.IEnumerable{Ocf.IOcfClient},System.String,System.Boolean)">
            <summary>
            Gets the child by path.
            </summary>
            <param name="roots">The roots.</param>
            <param name="childPath">The child path.</param>
            <param name="forceBind">if set to <c>true</c> [force bind].</param>
            <returns>IOcfClient.</returns>
        </member>
        <member name="M:Ocf.OcfUtils.GetRoot(Ocf.IOcfClient)">
            <summary>
            Gets the root.
            </summary>
            <param name="client">The client.</param>
            <returns>IOcfClient.</returns>
        </member>
        <member name="M:Ocf.OcfUtils.GetPath(Ocf.IOcfClient)">
            <summary>
            Gets the path.
            </summary>
            <param name="client">The client.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Ocf.OcfUtils.GetParameters(Ocf.IOcfRequest)">
            <summary>
            Gets the parameters.
            </summary>
            <param name="request">The request.</param>
            <returns>System.String[][].</returns>
        </member>
        <member name="M:Ocf.OcfUtils.GetAttributeInvocableName(System.Reflection.PropertyInfo,System.Object,System.Int32)">
            <summary>
            Gets the name of the attribute invocable.
            </summary>
            <param name="info">The info.</param>
            <param name="element">The element.</param>
            <param name="index">The index.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Ocf.OcfUtils.ConvertTimeSpanToString(System.TimeSpan)">
            <summary>
            Converts a TimeSpan into a string representation. Ex.: 23d11h04m21s
            </summary>
            <param name="timeSpan">The TimeSpan object to convert in string.</param>
            <returns>The string representation of the TimeSpan object.</returns>
        </member>
        <member name="M:Ocf.OcfUtils.ConvertStringToTimeSpan(System.String)">
            <summary>
            Converts a string into a TimeSpan object.
            </summary>
            <param name="value">The string to convert into a TimeSpan object.</param>
            <returns>The TimeSpan object created from the input string.</returns>
            <exception cref="T:System.FormatException">Occurs when the string format is not valid. Example of a valid format: 1d08h23m42s134ms812us</exception>
        </member>
        <member name="M:Ocf.OcfUtils.Extract(System.String@,System.String@,System.String)">
            <summary>
            Extracts the specified extracted.
            </summary>
            <param name="extracted">The extracted.</param>
            <param name="remaining">The remaining.</param>
            <param name="separator">The separator.</param>
        </member>
        <member name="M:Ocf.OcfUtils.SameText(System.String,System.String)">
            <summary>
            Sames the text.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="P:Ocf.OcfUtils.Debug">
            <summary>
            Gets a value indicating whether this <see cref="T:Ocf.OcfUtils"/> is debug.
            </summary>
            <value><c>true</c> if debug; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Ocf.OcfException">
            <summary>
            Class OcfException
            </summary>
        </member>
        <member name="M:Ocf.OcfException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
    </members>
</doc>
